
type Book {
    id: ID!
    title: String!
    author: Author
}

type Author {
    id: ID!
    name: String!
}

type BookConnection {
    edges: [BookEdge]
    pageInfo: PageInfo
}

type PageInfo {
    hasPreviousPage: Boolean!
    hasNextPage: Boolean!
}

type BookEdge {
    cursor: String
    node: Book
}

type Query {
    searchBookBy(id: ID!): Book
    authors: [Author!]
    books(first: Int, after: String): BookConnection
}

input AuthorInput {
    name: String!
}

type Mutation {
    createAuthor(author: AuthorInput!): Author
}